import random

__author__ = 'Кильдяшев Игорь'

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

list_max_count = 100

l_data = [random.randrange(-100,100) for i in range(0,list_max_count)]
l_new_data = []

print('Дано: \n')
print(l_data)

for digit in l_data:
	if digit > 0 and float(digit ** 0.5).is_integer():
		l_new_data.append(int(digit ** 0.5))
		print(l_new_data[-1])


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

d_days = {1:'первое', 2:'второе', 3:'третье', 4:'четвертое', 5:'пятое', 6:'шестое',
		7:'седьмое', 8:'восьмое', 9:'девятое', 10:'десятое', 11:'одиннадцатое', 
		12:'двенадцатое', 13:'тринадцатое', 14:'четырнадцатое', 15:'пятнадцатое', 
		16:'шестнадцатое', 17:'семнадцатое', 18:'восемнадцатое', 19:'девятнадцатое', 
		20:'двадцатое', 30:'тридцатое', 21:'двадцать', 31:'тридцать'}
d_months = {1:'января', 2:'февраля', 3:'марта', 4:'апреля', 5:'мая', 6:'июня', 7:'июля', 
		8:'августа', 9:'сентября', 10:'октября', 11:'ноября', 12:'декабря'}
days_in_m = (31, (29, 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
error_msg = 'Ошибка ввода данных!'

date_input = input('Введите дату в формате dd.mm.yyyy :')
date = date_input.split('.')

day = int(date[0])
month = int(date[1])
year = int(date[2])

if month < 1 or month > 12 or day < 1:
	print(error_msg)
	exit()
if (month != 2 and day > days_in_m[month - 1]) or (month == 2 and day > days_in_m[1][(year % 4) > 0]):
	print(error_msg)
	exit()

if 0 < day < 21:
	date_string = d_days[day]
elif 20 < day < 30:
	date_string = '{} {}'.format(d_days[21], d_days[day - 20])
elif day == 30:
	date_string = d_days[30]
elif day == 31:
	date_string = '{} {}'.format(d_days[31], d_days[1])
else:
	print(error_msg)
	exit()
print('{} {} {} года.'.format(date_string, d_months[month], year))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

n = int(input('Введите количество элементов: '))
l_random = [random.randrange(-100, 100) for i in range(0,n)]
print(l_random)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst = [random.randrange(0,50) for i in range (0,100)]
lst2 = []

lst.sort()
print('Исходный список: \n')
print(lst)

for num in lst:
	if num not in lst2:
		lst2.append(num)

print('\nРешение а): \n')
print(lst2)
lst2.clear()

for num in lst:
	if lst.count(num) == 1:
		lst2.append(num)

print('\nРешение б): \n')
print(lst2)